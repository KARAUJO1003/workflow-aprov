// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("USER") // Ex: "ADMIN", "APPROVER", "USER"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  steps           WorkflowStep[] // Etapas do workflow onde o usuário é responsável
  approvals       Approval[] // Aprovações feitas pelo usuário
  historyApproval ApprovalHistory[] // Histórico de aprovações feitas pelo usuário
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  status      String // Ex: "PENDING", "APPROVED", "REJECTED"
  workflowId  Int // Fluxo de aprovação associado ao projeto
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  workflow  Workflow          @relation(fields: [workflowId], references: [id])
  approvals Approval[] // Aprovações relacionadas ao projeto
  history   ApprovalHistory[] // Histórico de aprovações
}

model Workflow {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  steps       WorkflowStep[] // Etapas do fluxo de aprovação
  projects    Project[] // Projetos que usam este fluxo
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model WorkflowStep {
  id         Int      @id @default(autoincrement())
  workflowId Int // Fluxo ao qual esta etapa pertence
  step       Int // Ordem da etapa (ex: 1, 2, 3)
  approverId Int // Usuário responsável por aprovar esta etapa
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  workflow  Workflow          @relation(fields: [workflowId], references: [id])
  approver  User              @relation(fields: [approverId], references: [id])
  approvals Approval[] // Aprovações relacionadas a esta etapa
  history   ApprovalHistory[] // Histórico de aprovações
}

model Approval {
  id        Int      @id @default(autoincrement())
  projectId Int // Projeto relacionado
  stepId    Int // Etapa do workflow que está sendo aprovada
  userId    Int // Usuário que fez a aprovação
  status    String // Ex: "PENDING", "APPROVED", "REJECTED"
  comments  String? // Comentários opcionais
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project Project      @relation(fields: [projectId], references: [id])
  step    WorkflowStep @relation(fields: [stepId], references: [id])
  user    User         @relation(fields: [userId], references: [id])
}

model ApprovalHistory {
  id        Int      @id @default(autoincrement())
  projectId Int // Projeto relacionado
  stepId    Int // Etapa do workflow que foi aprovada/rejeitada
  userId    Int // Usuário que fez a ação
  status    String // Ex: "PENDING", "APPROVED", "REJECTED"
  comments  String? // Comentários opcionais
  createdAt DateTime @default(now())

  project Project      @relation(fields: [projectId], references: [id])
  step    WorkflowStep @relation(fields: [stepId], references: [id])
  user    User         @relation(fields: [userId], references: [id])
}
